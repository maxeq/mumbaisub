// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BatchMetadataUpdate extends ethereum.Event {
  get params(): BatchMetadataUpdate__Params {
    return new BatchMetadataUpdate__Params(this);
  }
}

export class BatchMetadataUpdate__Params {
  _event: BatchMetadataUpdate;

  constructor(event: BatchMetadataUpdate) {
    this._event = event;
  }

  get _fromTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _toTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ForgeProcessed extends ethereum.Event {
  get params(): ForgeProcessed__Params {
    return new ForgeProcessed__Params(this);
  }
}

export class ForgeProcessed__Params {
  _event: ForgeProcessed;

  constructor(event: ForgeProcessed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get itemId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[2].value.toString();
  }

  get successPercentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get random(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get functionName(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MetadataUpdate extends ethereum.Event {
  get params(): MetadataUpdate__Params {
    return new MetadataUpdate__Params(this);
  }
}

export class MetadataUpdate__Params {
  _event: MetadataUpdate;

  constructor(event: MetadataUpdate) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MintItem__forgeItemInputParamsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get tokenAmount(): BigInt {
    return this[1].toBigInt();
  }

  get itemId1(): BigInt {
    return this[2].toBigInt();
  }

  get itemId2(): BigInt {
    return this[3].toBigInt();
  }

  get newItemPowerRange1(): i32 {
    return this[4].toI32();
  }

  get newItemPowerRange2(): i32 {
    return this[5].toI32();
  }

  get desiredItemType(): string {
    return this[6].toString();
  }

  get successPercentage(): BigInt {
    return this[7].toBigInt();
  }

  get timestamp(): BigInt {
    return this[8].toBigInt();
  }

  get signature(): Bytes {
    return this[9].toBytes();
  }
}

export class MintItem__forgeSameValueItemInputParamsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get tokenAmount(): BigInt {
    return this[1].toBigInt();
  }

  get itemId1(): BigInt {
    return this[2].toBigInt();
  }

  get itemId2(): BigInt {
    return this[3].toBigInt();
  }

  get newItemPowerRange1(): i32 {
    return this[4].toI32();
  }

  get newItemPowerRange2(): i32 {
    return this[5].toI32();
  }

  get desiredItemType(): string {
    return this[6].toString();
  }

  get successPercentage(): BigInt {
    return this[7].toBigInt();
  }

  get timestamp(): BigInt {
    return this[8].toBigInt();
  }

  get signature(): Bytes {
    return this[9].toBytes();
  }
}

export class MintItem__itemsResult {
  value0: string;
  value1: BigInt;
  value2: i32;
  value3: string;

  constructor(value0: string, value1: BigInt, value2: i32, value3: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    map.set("value3", ethereum.Value.fromString(this.value3));
    return map;
  }

  getItemType(): string {
    return this.value0;
  }

  getPower(): BigInt {
    return this.value1;
  }

  getDurability(): i32 {
    return this.value2;
  }

  getCharacterOwner(): string {
    return this.value3;
  }
}

export class MintItem__viewOwnedItemsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get item(): MintItem__viewOwnedItemsResultValue0ItemStruct {
    return changetype<MintItem__viewOwnedItemsResultValue0ItemStruct>(
      this[1].toTuple(),
    );
  }
}

export class MintItem__viewOwnedItemsResultValue0ItemStruct extends ethereum.Tuple {
  get itemType(): string {
    return this[0].toString();
  }

  get power(): BigInt {
    return this[1].toBigInt();
  }

  get durability(): i32 {
    return this[2].toI32();
  }

  get characterOwner(): string {
    return this[3].toString();
  }
}

export class MintItem extends ethereum.SmartContract {
  static bind(address: Address): MintItem {
    return new MintItem("MintItem", address);
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  _adjustPower(currentPower: BigInt): BigInt {
    let result = super.call("_adjustPower", "_adjustPower(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(currentPower),
    ]);

    return result[0].toBigInt();
  }

  try__adjustPower(currentPower: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_adjustPower",
      "_adjustPower(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(currentPower)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  changeItemsDurability(
    tokenIds: Array<BigInt>,
    decrementAmount: i32,
  ): Array<BigInt> {
    let result = super.call(
      "changeItemsDurability",
      "changeItemsDurability(uint256[],uint16):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigIntArray(tokenIds),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(decrementAmount)),
      ],
    );

    return result[0].toBigIntArray();
  }

  try_changeItemsDurability(
    tokenIds: Array<BigInt>,
    decrementAmount: i32,
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "changeItemsDurability",
      "changeItemsDurability(uint256[],uint16):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigIntArray(tokenIds),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(decrementAmount)),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  dungeonAdventure(): Address {
    let result = super.call(
      "dungeonAdventure",
      "dungeonAdventure():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_dungeonAdventure(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "dungeonAdventure",
      "dungeonAdventure():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  forgeItem(params: MintItem__forgeItemInputParamsStruct): BigInt {
    let result = super.call(
      "forgeItem",
      "forgeItem((address,uint256,uint256,uint256,uint16,uint16,string,uint256,uint256,bytes)):(uint256)",
      [ethereum.Value.fromTuple(params)],
    );

    return result[0].toBigInt();
  }

  try_forgeItem(
    params: MintItem__forgeItemInputParamsStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "forgeItem",
      "forgeItem((address,uint256,uint256,uint256,uint16,uint16,string,uint256,uint256,bytes)):(uint256)",
      [ethereum.Value.fromTuple(params)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  forgeSameValueItem(
    params: MintItem__forgeSameValueItemInputParamsStruct,
  ): BigInt {
    let result = super.call(
      "forgeSameValueItem",
      "forgeSameValueItem((address,uint256,uint256,uint256,uint16,uint16,string,uint256,uint256,bytes)):(uint256)",
      [ethereum.Value.fromTuple(params)],
    );

    return result[0].toBigInt();
  }

  try_forgeSameValueItem(
    params: MintItem__forgeSameValueItemInputParamsStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "forgeSameValueItem",
      "forgeSameValueItem((address,uint256,uint256,uint256,uint16,uint16,string,uint256,uint256,bytes)):(uint256)",
      [ethereum.Value.fromTuple(params)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameTreasury(): Address {
    let result = super.call("gameTreasury", "gameTreasury():(address)", []);

    return result[0].toAddress();
  }

  try_gameTreasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("gameTreasury", "gameTreasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getItemCharacterOwner(itemId: BigInt): string {
    let result = super.call(
      "getItemCharacterOwner",
      "getItemCharacterOwner(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(itemId)],
    );

    return result[0].toString();
  }

  try_getItemCharacterOwner(itemId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getItemCharacterOwner",
      "getItemCharacterOwner(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(itemId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getItemDurability(itemId: BigInt): i32 {
    let result = super.call(
      "getItemDurability",
      "getItemDurability(uint256):(uint16)",
      [ethereum.Value.fromUnsignedBigInt(itemId)],
    );

    return result[0].toI32();
  }

  try_getItemDurability(itemId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getItemDurability",
      "getItemDurability(uint256):(uint16)",
      [ethereum.Value.fromUnsignedBigInt(itemId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getItemPower(itemId: BigInt): BigInt {
    let result = super.call("getItemPower", "getItemPower(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(itemId),
    ]);

    return result[0].toBigInt();
  }

  try_getItemPower(itemId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getItemPower",
      "getItemPower(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(itemId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getItemType(itemId: BigInt): string {
    let result = super.call("getItemType", "getItemType(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(itemId),
    ]);

    return result[0].toString();
  }

  try_getItemType(itemId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("getItemType", "getItemType(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(itemId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)],
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  itemTypes(param0: BigInt): string {
    let result = super.call("itemTypes", "itemTypes(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toString();
  }

  try_itemTypes(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("itemTypes", "itemTypes(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  items(param0: BigInt): MintItem__itemsResult {
    let result = super.call(
      "items",
      "items(uint256):(string,uint256,uint16,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new MintItem__itemsResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toString(),
    );
  }

  try_items(param0: BigInt): ethereum.CallResult<MintItem__itemsResult> {
    let result = super.tryCall(
      "items",
      "items(uint256):(string,uint256,uint16,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MintItem__itemsResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toString(),
      ),
    );
  }

  mintBoxAddress(): Address {
    let result = super.call("mintBoxAddress", "mintBoxAddress():(address)", []);

    return result[0].toAddress();
  }

  try_mintBoxAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mintBoxAddress",
      "mintBoxAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mintItem(to: Address): BigInt {
    let result = super.call("mintItem", "mintItem(address):(uint256)", [
      ethereum.Value.fromAddress(to),
    ]);

    return result[0].toBigInt();
  }

  try_mintItem(to: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mintItem", "mintItem(address):(uint256)", [
      ethereum.Value.fromAddress(to),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paymentToken(): Address {
    let result = super.call("paymentToken", "paymentToken():(address)", []);

    return result[0].toAddress();
  }

  try_paymentToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("paymentToken", "paymentToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index),
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(itemIdCounter: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(itemIdCounter),
    ]);

    return result[0].toString();
  }

  try_tokenURI(itemIdCounter: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(itemIdCounter),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewOwnedItems(
    owner: Address,
  ): Array<MintItem__viewOwnedItemsResultValue0Struct> {
    let result = super.call(
      "viewOwnedItems",
      "viewOwnedItems(address):((uint256,(string,uint256,uint16,string))[])",
      [ethereum.Value.fromAddress(owner)],
    );

    return result[0].toTupleArray<MintItem__viewOwnedItemsResultValue0Struct>();
  }

  try_viewOwnedItems(
    owner: Address,
  ): ethereum.CallResult<Array<MintItem__viewOwnedItemsResultValue0Struct>> {
    let result = super.tryCall(
      "viewOwnedItems",
      "viewOwnedItems(address):((uint256,(string,uint256,uint16,string))[])",
      [ethereum.Value.fromAddress(owner)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<MintItem__viewOwnedItemsResultValue0Struct>(),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class BurnItemForRewardCall extends ethereum.Call {
  get inputs(): BurnItemForRewardCall__Inputs {
    return new BurnItemForRewardCall__Inputs(this);
  }

  get outputs(): BurnItemForRewardCall__Outputs {
    return new BurnItemForRewardCall__Outputs(this);
  }
}

export class BurnItemForRewardCall__Inputs {
  _call: BurnItemForRewardCall;

  constructor(call: BurnItemForRewardCall) {
    this._call = call;
  }

  get params(): BurnItemForRewardCallParamsStruct {
    return changetype<BurnItemForRewardCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class BurnItemForRewardCall__Outputs {
  _call: BurnItemForRewardCall;

  constructor(call: BurnItemForRewardCall) {
    this._call = call;
  }
}

export class BurnItemForRewardCallParamsStruct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get itemDurability(): i32 {
    return this[1].toI32();
  }

  get rewardAmount(): BigInt {
    return this[2].toBigInt();
  }

  get timestamp(): BigInt {
    return this[3].toBigInt();
  }

  get signature(): Bytes {
    return this[4].toBytes();
  }
}

export class ChangeItemsCharacterOwnerCall extends ethereum.Call {
  get inputs(): ChangeItemsCharacterOwnerCall__Inputs {
    return new ChangeItemsCharacterOwnerCall__Inputs(this);
  }

  get outputs(): ChangeItemsCharacterOwnerCall__Outputs {
    return new ChangeItemsCharacterOwnerCall__Outputs(this);
  }
}

export class ChangeItemsCharacterOwnerCall__Inputs {
  _call: ChangeItemsCharacterOwnerCall;

  constructor(call: ChangeItemsCharacterOwnerCall) {
    this._call = call;
  }

  get params(): ChangeItemsCharacterOwnerCallParamsStruct {
    return changetype<ChangeItemsCharacterOwnerCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class ChangeItemsCharacterOwnerCall__Outputs {
  _call: ChangeItemsCharacterOwnerCall;

  constructor(call: ChangeItemsCharacterOwnerCall) {
    this._call = call;
  }
}

export class ChangeItemsCharacterOwnerCallParamsStruct extends ethereum.Tuple {
  get tokenAmount(): BigInt {
    return this[0].toBigInt();
  }

  get tokenIds(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get newOwners(): Array<string> {
    return this[2].toStringArray();
  }

  get itemPower(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get signature(): Bytes {
    return this[5].toBytes();
  }
}

export class ChangeItemsDurabilityCall extends ethereum.Call {
  get inputs(): ChangeItemsDurabilityCall__Inputs {
    return new ChangeItemsDurabilityCall__Inputs(this);
  }

  get outputs(): ChangeItemsDurabilityCall__Outputs {
    return new ChangeItemsDurabilityCall__Outputs(this);
  }
}

export class ChangeItemsDurabilityCall__Inputs {
  _call: ChangeItemsDurabilityCall;

  constructor(call: ChangeItemsDurabilityCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get decrementAmount(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class ChangeItemsDurabilityCall__Outputs {
  _call: ChangeItemsDurabilityCall;

  constructor(call: ChangeItemsDurabilityCall) {
    this._call = call;
  }

  get value0(): Array<BigInt> {
    return this._call.outputValues[0].value.toBigIntArray();
  }
}

export class ForgeItemCall extends ethereum.Call {
  get inputs(): ForgeItemCall__Inputs {
    return new ForgeItemCall__Inputs(this);
  }

  get outputs(): ForgeItemCall__Outputs {
    return new ForgeItemCall__Outputs(this);
  }
}

export class ForgeItemCall__Inputs {
  _call: ForgeItemCall;

  constructor(call: ForgeItemCall) {
    this._call = call;
  }

  get params(): ForgeItemCallParamsStruct {
    return changetype<ForgeItemCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class ForgeItemCall__Outputs {
  _call: ForgeItemCall;

  constructor(call: ForgeItemCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ForgeItemCallParamsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get tokenAmount(): BigInt {
    return this[1].toBigInt();
  }

  get itemId1(): BigInt {
    return this[2].toBigInt();
  }

  get itemId2(): BigInt {
    return this[3].toBigInt();
  }

  get newItemPowerRange1(): i32 {
    return this[4].toI32();
  }

  get newItemPowerRange2(): i32 {
    return this[5].toI32();
  }

  get desiredItemType(): string {
    return this[6].toString();
  }

  get successPercentage(): BigInt {
    return this[7].toBigInt();
  }

  get timestamp(): BigInt {
    return this[8].toBigInt();
  }

  get signature(): Bytes {
    return this[9].toBytes();
  }
}

export class ForgeSameValueItemCall extends ethereum.Call {
  get inputs(): ForgeSameValueItemCall__Inputs {
    return new ForgeSameValueItemCall__Inputs(this);
  }

  get outputs(): ForgeSameValueItemCall__Outputs {
    return new ForgeSameValueItemCall__Outputs(this);
  }
}

export class ForgeSameValueItemCall__Inputs {
  _call: ForgeSameValueItemCall;

  constructor(call: ForgeSameValueItemCall) {
    this._call = call;
  }

  get params(): ForgeSameValueItemCallParamsStruct {
    return changetype<ForgeSameValueItemCallParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class ForgeSameValueItemCall__Outputs {
  _call: ForgeSameValueItemCall;

  constructor(call: ForgeSameValueItemCall) {
    this._call = call;
  }

  get itemId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ForgeSameValueItemCallParamsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get tokenAmount(): BigInt {
    return this[1].toBigInt();
  }

  get itemId1(): BigInt {
    return this[2].toBigInt();
  }

  get itemId2(): BigInt {
    return this[3].toBigInt();
  }

  get newItemPowerRange1(): i32 {
    return this[4].toI32();
  }

  get newItemPowerRange2(): i32 {
    return this[5].toI32();
  }

  get desiredItemType(): string {
    return this[6].toString();
  }

  get successPercentage(): BigInt {
    return this[7].toBigInt();
  }

  get timestamp(): BigInt {
    return this[8].toBigInt();
  }

  get signature(): Bytes {
    return this[9].toBytes();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get initialOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _gameTreasuryAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _dungeonAdventure(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _mintBoxAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _authorizedSigner(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintItemCall extends ethereum.Call {
  get inputs(): MintItemCall__Inputs {
    return new MintItemCall__Inputs(this);
  }

  get outputs(): MintItemCall__Outputs {
    return new MintItemCall__Outputs(this);
  }
}

export class MintItemCall__Inputs {
  _call: MintItemCall;

  constructor(call: MintItemCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MintItemCall__Outputs {
  _call: MintItemCall;

  constructor(call: MintItemCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RepairItemDurabilityCall extends ethereum.Call {
  get inputs(): RepairItemDurabilityCall__Inputs {
    return new RepairItemDurabilityCall__Inputs(this);
  }

  get outputs(): RepairItemDurabilityCall__Outputs {
    return new RepairItemDurabilityCall__Outputs(this);
  }
}

export class RepairItemDurabilityCall__Inputs {
  _call: RepairItemDurabilityCall;

  constructor(call: RepairItemDurabilityCall) {
    this._call = call;
  }

  get request(): RepairItemDurabilityCallRequestStruct {
    return changetype<RepairItemDurabilityCallRequestStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class RepairItemDurabilityCall__Outputs {
  _call: RepairItemDurabilityCall;

  constructor(call: RepairItemDurabilityCall) {
    this._call = call;
  }
}

export class RepairItemDurabilityCallRequestStruct extends ethereum.Tuple {
  get tokenIds(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get itemPower(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get tokenAmount(): BigInt {
    return this[2].toBigInt();
  }

  get timestamp(): BigInt {
    return this[3].toBigInt();
  }

  get signature(): Bytes {
    return this[4].toBytes();
  }
}

export class SafeMintCall extends ethereum.Call {
  get inputs(): SafeMintCall__Inputs {
    return new SafeMintCall__Inputs(this);
  }

  get outputs(): SafeMintCall__Outputs {
    return new SafeMintCall__Outputs(this);
  }
}

export class SafeMintCall__Inputs {
  _call: SafeMintCall;

  constructor(call: SafeMintCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SafeMintCall__Outputs {
  _call: SafeMintCall;

  constructor(call: SafeMintCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetAuthorizedSignerCall extends ethereum.Call {
  get inputs(): SetAuthorizedSignerCall__Inputs {
    return new SetAuthorizedSignerCall__Inputs(this);
  }

  get outputs(): SetAuthorizedSignerCall__Outputs {
    return new SetAuthorizedSignerCall__Outputs(this);
  }
}

export class SetAuthorizedSignerCall__Inputs {
  _call: SetAuthorizedSignerCall;

  constructor(call: SetAuthorizedSignerCall) {
    this._call = call;
  }

  get _authorizedSigner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorizedSignerCall__Outputs {
  _call: SetAuthorizedSignerCall;

  constructor(call: SetAuthorizedSignerCall) {
    this._call = call;
  }
}

export class SetDungeonAdventureAddressCall extends ethereum.Call {
  get inputs(): SetDungeonAdventureAddressCall__Inputs {
    return new SetDungeonAdventureAddressCall__Inputs(this);
  }

  get outputs(): SetDungeonAdventureAddressCall__Outputs {
    return new SetDungeonAdventureAddressCall__Outputs(this);
  }
}

export class SetDungeonAdventureAddressCall__Inputs {
  _call: SetDungeonAdventureAddressCall;

  constructor(call: SetDungeonAdventureAddressCall) {
    this._call = call;
  }

  get _dungeonAdventure(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDungeonAdventureAddressCall__Outputs {
  _call: SetDungeonAdventureAddressCall;

  constructor(call: SetDungeonAdventureAddressCall) {
    this._call = call;
  }
}

export class SetGameTreasuryAddressCall extends ethereum.Call {
  get inputs(): SetGameTreasuryAddressCall__Inputs {
    return new SetGameTreasuryAddressCall__Inputs(this);
  }

  get outputs(): SetGameTreasuryAddressCall__Outputs {
    return new SetGameTreasuryAddressCall__Outputs(this);
  }
}

export class SetGameTreasuryAddressCall__Inputs {
  _call: SetGameTreasuryAddressCall;

  constructor(call: SetGameTreasuryAddressCall) {
    this._call = call;
  }

  get _gameTreasuryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGameTreasuryAddressCall__Outputs {
  _call: SetGameTreasuryAddressCall;

  constructor(call: SetGameTreasuryAddressCall) {
    this._call = call;
  }
}

export class SetMintBoxAddressCall extends ethereum.Call {
  get inputs(): SetMintBoxAddressCall__Inputs {
    return new SetMintBoxAddressCall__Inputs(this);
  }

  get outputs(): SetMintBoxAddressCall__Outputs {
    return new SetMintBoxAddressCall__Outputs(this);
  }
}

export class SetMintBoxAddressCall__Inputs {
  _call: SetMintBoxAddressCall;

  constructor(call: SetMintBoxAddressCall) {
    this._call = call;
  }

  get _mintBoxAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMintBoxAddressCall__Outputs {
  _call: SetMintBoxAddressCall;

  constructor(call: SetMintBoxAddressCall) {
    this._call = call;
  }
}

export class SetPaymentTokenCall extends ethereum.Call {
  get inputs(): SetPaymentTokenCall__Inputs {
    return new SetPaymentTokenCall__Inputs(this);
  }

  get outputs(): SetPaymentTokenCall__Outputs {
    return new SetPaymentTokenCall__Outputs(this);
  }
}

export class SetPaymentTokenCall__Inputs {
  _call: SetPaymentTokenCall;

  constructor(call: SetPaymentTokenCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPaymentTokenCall__Outputs {
  _call: SetPaymentTokenCall;

  constructor(call: SetPaymentTokenCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
